{"version":3,"sources":["services/api.js","components/SearchBox.jsx","services/crudCart.js","components/Product.jsx","components/ProductList.jsx","components/Categories.jsx","components/Navbar.jsx","pages/MainPage.jsx","components/CartTableLine.jsx","components/CartTable.jsx","pages/ShoppingCart.jsx","components/RatingList.jsx","components/Rating.jsx","components/CrudCartItem.jsx","pages/ProductDetail.jsx","services/data.js","components/BuyerInfo.jsx","components/PaymentMethod.jsx","components/PaymentForms.jsx","pages/Checkout.jsx","components/ShoppingCartButton.jsx","App.js","serviceWorker.js","index.js"],"names":["a","fetch","then","categoriesList","json","categoryId","query","products","sort","SearchBox","this","props","handleClick","searchText","onSearchTextChange","className","id","type","placeholder","aria-label","data-testid","value","onChange","onClick","Component","addToCart","title","price","availableQuantity","cartItems","JSON","parse","localStorage","getItem","itemIndex","findIndex","item","quantity","setItem","stringify","Product","addCartInput","bind","product","available_quantity","updateCartSize","thumbnail","shipping","style","width","src","alt","free_shipping","to","pathname","state","ProductList","results","length","map","key","Categories","onCategoryClick","categories","name","Navbar","children","MainPage","selectedCategory","searchProducts","searchProductsSorted","sortButtons","categorySelector","api","setState","filters","q","category","values","e","target","CartTableLine","deleteButton","quantityCrud","increaseButton","decreaseButton","updateCartItems","scope","splice","deleteCartItem","icon","faTimes","subToCart","faMinus","faPlus","CartTable","totalCartPrice","cartTable","cartTableBody","index","reduce","accumulator","toFixed","ShoppingCart","RatingList","ratingList","rate","comment","email","ratingId","total","rating","interactive","Rating","productId","handleChange","handleRating","addRating","commentTextArea","event","cols","rows","onRate","React","CrudCartItem","addProductToCart","subProductToCart","updateCart","ProductDetail","productCard","location","maxWidth","match","params","paymentMethods","brazilStates","initials","BuyerInfo","required","PaymentMethod","htmlFor","PaymentForms","faCreditCard","Checkout","ShoppingCartButton","cartSize","faShoppingCart","App","path","render","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.db35e4a9.chunk.js","sourcesContent":["export async function getCategories() {\n  return fetch('https://api.mercadolibre.com/sites/MLB/categories')\n    .then((categoriesList) => categoriesList.json());\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  return fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}`)\n    .then((products) => products.json());\n}\n\nexport async function getProductsSorted(categoryId, query, sort) {\n  return fetch(`https://api.mercadolibre.com/sites/MLB/search?category=${categoryId}&q=${query}&sort=${sort}`)\n    .then((products) => products.json());\n}\n","import React, { Component } from 'react';\n\nexport class SearchBox extends Component {\n  render() {\n    const { handleClick, searchText, onSearchTextChange } = this.props;\n    return (\n      <form className=\"form-inline form-control-lg w-50\">\n        <input\n          id=\"search-input\"\n          className=\"form-control my-5 mx-3 my-sm-0 w-75\"\n          type=\"search\"\n          placeholder=\"Procurar\"\n          aria-label=\"Search\"\n          data-testid=\"query-input\"\n          value={searchText}\n          onChange={onSearchTextChange}\n        />\n        <button\n          className=\"btn btn-danger my-2 my-sm-0\"\n          type=\"button\"\n          data-testid=\"query-button\"\n          onClick={handleClick()}\n        >\n          Procurar\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default SearchBox;\n","export function addToCart(title, price, id, availableQuantity) {\n  const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n  const itemIndex = cartItems.findIndex((item) => item.id === id);\n  if (itemIndex !== -1) {\n    if (cartItems[itemIndex].quantity < availableQuantity) {\n      cartItems[itemIndex].quantity += 1;\n      localStorage.setItem(\n        'cartItems',\n        JSON.stringify(cartItems),\n      );\n    }\n  } else {\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify([...cartItems, { title, id, price, quantity: 1, availableQuantity }]),\n    );\n  }\n}\n\nexport function subToCart(id) {\n  const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n  const itemIndex = cartItems.findIndex((item) => item.id === id);\n  if (itemIndex !== -1 && cartItems[itemIndex].quantity > 1) {\n    cartItems[itemIndex].quantity -= 1;\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(cartItems),\n    );\n  }\n}\n\nexport function updateCart(title, price, id, quantity, availableQuantity) {\n  const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n  const itemIndex = cartItems.findIndex((item) => item.id === id);\n  if (itemIndex !== -1) {\n    cartItems[itemIndex] = { quantity, title, price, id, availableQuantity };\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(cartItems),\n    );\n  } else {\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify([...cartItems, { title, id, price, quantity, availableQuantity }]),\n    );\n  }\n}\n\nexport function deleteCartItem(id) {\n  const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n  const itemIndex = cartItems.findIndex((item) => item.id === id);\n  if (itemIndex !== -1) {\n    cartItems.splice(itemIndex, 1);\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(cartItems),\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { addToCart } from '../services/crudCart';\n\nexport class Product extends Component {\n  constructor(props) {\n    super(props);\n    this.addCartInput = this.addCartInput.bind(this);\n  }\n\n  addCartInput() {\n    const {\n      product:\n      { title, price, id, available_quantity: availableQuantity },\n      updateCartSize,\n    } = this.props;\n    return (\n      <input\n        data-testid=\"product-add-to-cart\"\n        className=\"btn btn-link\"\n        value=\"Adicionar ao Carrinho\"\n        type=\"button\"\n        onClick={() => {\n          addToCart(title, price, id, availableQuantity);\n          updateCartSize();\n        }}\n      />\n    );\n  }\n\n  render() {\n    const { product: { title, price, thumbnail, id, shipping } } = this.props;\n    const { product: { available_quantity: availableQuantity } } = this.props;\n    return (\n      <div className=\"col mb-3\" data-testid=\"product\">\n        <div className=\"card text-center\" style={{ width: '18rem' }}>\n          <img src={thumbnail} alt={`${title} thumbnail`} className=\"card-img-top\" />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{title}</h5>\n            {shipping.free_shipping ? (\n              <p className=\"bg-danger text-white\" data-testid=\"free-shipping\">\n                Frete grátis\n              </p>\n            ) : null}\n            <p className=\"card-text\">{`R$${price}`}</p>\n            <Link\n              to={{\n                pathname: `/product/${id}`,\n                state: { title, thumbnail, price, shipping, availableQuantity, id },\n              }}\n              className=\"btn btn-link\"\n              data-testid=\"product-detail-link\"\n            >\n              Detalhes\n            </Link>\n            {this.addCartInput()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Product;\n","import React, { Component } from 'react';\nimport Product from './Product';\n\nexport class ProductList extends Component {\n  render() {\n    const { products, updateCartSize } = this.props;\n\n    if (products.results) {\n      if (products.results.length === 0) return <p>Nenhum Produto foi encontrado</p>;\n      return (\n        <div className=\"row row-cols-1 row-cols-md-2\">\n          {products.results.map((product) => (\n            <Product product={product} key={product.id} updateCartSize={updateCartSize} />\n          ))}\n        </div>\n      );\n    }\n    return (\n      <p data-testid=\"home-initial-message\">\n        Digite algum termo de pesquisa ou escolha uma categoria.\n      </p>\n    );\n  }\n}\n\nexport default ProductList;\n","import React, { Component } from 'react';\n\nexport class Categories extends Component {\n  render() {\n    const { onCategoryClick, categories } = this.props;\n\n    return categories.map(({ id, name }) => (\n      <div key={id}>\n        <input\n          className=\"btn btn-link\"\n          data-testid=\"category\"\n          type=\"button\"\n          id={id}\n          value={name}\n          name=\"categories\"\n          onClick={onCategoryClick}\n        />\n      </div>\n    ));\n  }\n}\n\nexport default Categories;\n","import React, { Component } from 'react';\n\nexport default class Navbar extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <nav className=\"navbar navbar-dark bg-dark justify-content-center\">\n        {children}\n      </nav>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport * as api from '../services/api';\nimport SearchBox from '../components/SearchBox';\nimport ProductList from '../components/ProductList';\nimport Categories from '../components/Categories';\nimport Navbar from '../components/Navbar';\n\nexport default class MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    if (!localStorage.getItem('cartItems')) {\n      localStorage.setItem('cartItems', '[]');\n    }\n\n    this.state = {\n      categories: [],\n      selectedCategory: '',\n      searchText: '',\n      products: [],\n    };\n    this.searchProducts = this.searchProducts.bind(this);\n    this.searchProductsSorted = this.searchProductsSorted.bind(this);\n    this.sortButtons = this.sortButtons.bind(this);\n    this.categorySelector = this.categorySelector.bind(this);\n  }\n\n  componentDidMount() {\n    api.getCategories().then((categories) => {\n      this.setState({ categories });\n    });\n  }\n\n  searchProducts() {\n    const { searchText, selectedCategory } = this.state;\n    api\n      .getProductsFromCategoryAndQuery(selectedCategory, searchText)\n      .then((products) => this.setState({ products }));\n  }\n\n  searchProductsSorted(sort) {\n    const { products: { query, filters } } = this.state;\n    let q = query;\n    let category = '';\n    if (filters[0]) category = filters[0].values[0].id;\n    if (!query) q = '';\n    api.getProductsSorted(category, q, sort).then((products) => this.setState({ products }));\n  }\n\n  sortButtons() {\n    return (\n      <form className=\"form-control-lg\">\n        <button\n          type=\"button\"\n          className=\"btn btn-danger mx-2 my-2 my-sm-0\"\n          onClick={() => this.searchProductsSorted('price_asc')}\n        >\n          Menor Preço\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-danger mx-2 my-2 my-sm-0\"\n          onClick={() => this.searchProductsSorted('price_desc')}\n        >\n          Maior Preço\n        </button>\n      </form>\n    );\n  }\n\n  categorySelector() {\n    const { categories, selectedCategory } = this.state;\n    return (\n      <Categories\n        categories={categories}\n        selectedCategory={selectedCategory}\n        onCategoryClick={async (e) => {\n          await this.setState({ selectedCategory: e.target.id });\n          this.searchProducts();\n        }}\n      />\n    );\n  }\n\n  render() {\n    const { searchText, products } = this.state;\n    const { updateCartSize } = this.props;\n    return (\n      <div>\n        <Navbar>\n          <SearchBox\n            handleClick={() => this.searchProducts}\n            searchText={searchText}\n            onSearchTextChange={(e) => this.setState({ searchText: e.target.value })}\n          />\n          <h5 className=\"text-white\">Ordenar</h5>\n          {this.sortButtons()}\n        </Navbar>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3\">{this.categorySelector()}</div>\n            <div className=\"col\">\n              <ProductList products={products} updateCartSize={updateCartSize} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { addToCart, subToCart, deleteCartItem } from '../services/crudCart';\n\nexport class CartTableLine extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteButton = this.deleteButton.bind(this);\n    this.quantityCrud = this.quantityCrud.bind(this);\n    this.increaseButton = this.increaseButton.bind(this);\n    this.decreaseButton = this.decreaseButton.bind(this);\n  }\n\n  deleteButton() {\n    const {\n      updateCartItems,\n      updateCartSize,\n      item: { id },\n    } = this.props;\n    return (\n      <th scope=\"row\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            deleteCartItem(id);\n            updateCartItems();\n            updateCartSize();\n          }}\n          className=\"btn text-danger\"\n        >\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </th>\n    );\n  }\n\n  decreaseButton() {\n    const {\n      item: { id },\n      updateCartItems,\n      updateCartSize,\n    } = this.props;\n    return (\n      <button\n        data-testid=\"product-decrease-quantity\"\n        type=\"button\"\n        onClick={() => {\n          subToCart(id);\n          updateCartItems();\n          updateCartSize();\n        }}\n        className=\"btn btn-link\"\n      >\n        <FontAwesomeIcon icon={faMinus} />\n      </button>\n    );\n  }\n\n  increaseButton() {\n    const {\n      item: { title, price, id, availableQuantity },\n      updateCartItems,\n      updateCartSize,\n    } = this.props;\n    return (\n      <button\n        data-testid=\"product-increase-quantity\"\n        type=\"button\"\n        onClick={() => {\n          addToCart(title, price, id, availableQuantity);\n          updateCartItems();\n          updateCartSize();\n        }}\n        className=\"btn btn-link\"\n      >\n        <FontAwesomeIcon icon={faPlus} />\n      </button>\n    );\n  }\n\n  quantityCrud() {\n    const { item: { quantity } } = this.props;\n    return (\n      <td data-testid=\"shopping-cart-product-quantity\">\n        {this.increaseButton()}\n        <span>{quantity}</span>\n        {this.decreaseButton()}\n      </td>\n    );\n  }\n\n  render() {\n    const { item: { title, price } } = this.props;\n    return (\n      <tr>\n        {this.deleteButton()}\n        <td data-testid=\"shopping-cart-product-name\">{title}</td>\n        <td>R$ {price}</td>\n        {this.quantityCrud()}\n      </tr>\n    );\n  }\n}\n\nexport default CartTableLine;\n","import React, { Component } from 'react';\nimport CartTableLine from './CartTableLine';\n\nconst cartTableHeader = () => (\n  <thead>\n    <tr>\n      <th scope=\"col\">#</th>\n      <th scope=\"col\">Nome</th>\n      <th scope=\"col\">Preço</th>\n      <th scope=\"col\">Quantidade</th>\n    </tr>\n  </thead>\n);\n\nexport class CartTable extends Component {\n  constructor(props) {\n    super(props);\n    const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n    this.state = { cartItems, totalCartPrice: 0 };\n    this.updateCartItems = this.updateCartItems.bind(this);\n    this.cartTable = this.cartTable.bind(this);\n    this.cartTableBody = this.cartTableBody.bind(this);\n    this.totalCartPrice = this.totalCartPrice.bind(this);\n  }\n\n  componentDidMount() {\n    this.totalCartPrice();\n  }\n\n  async updateCartItems() {\n    const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n    await this.setState(() => ({ cartItems }));\n    this.totalCartPrice();\n  }\n\n  cartTableBody() {\n    const { updateCartSize } = this.props;\n    const { cartItems } = this.state;\n    return (\n      <tbody>\n        {cartItems.map((item, index) => (\n          <CartTableLine\n            key={item.id}\n            item={item}\n            index={index}\n            updateCartItems={this.updateCartItems}\n            updateCartSize={updateCartSize}\n          />\n        ))}\n      </tbody>\n    );\n  }\n\n  totalCartPrice() {\n    const { cartItems } = this.state;\n    const totalCartPrice = cartItems\n      .reduce((accumulator, { quantity, price }) => (quantity * price) + accumulator, 0)\n      .toFixed(2);\n    // this.setState({totalCartPrice})\n    this.setState(() => ({ totalCartPrice }));\n  }\n\n  cartTable() {\n    const { cartItems } = this.state;\n    if (cartItems.length === 0) {\n      return <p data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</p>;\n    }\n    return (\n      <table className=\"table table-striped\">\n        {cartTableHeader()}\n        {this.cartTableBody()}\n      </table>\n    );\n  }\n\n  render() {\n    const { totalCartPrice } = this.state;\n    return (\n      <div>\n        {this.cartTable()}\n        <span>{`Preço total: R$ ${totalCartPrice}`}</span>\n      </div>\n    );\n  }\n}\n\nexport default CartTable;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport CartTable from '../components/CartTable';\n\nexport class ShoppingCart extends Component {\n  render() {\n    const { updateCartSize } = this.props;\n    return (\n      <div>\n        <Link to=\"/\">Voltar</Link>\n        <CartTable updateCartSize={updateCartSize} />\n        <Link data-testid=\"checkout-products\" to=\"/checkout\">\n          Finalizar Compra\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default ShoppingCart;\n","import React, { Component } from 'react';\nimport Rater from 'react-rater';\n\nexport class RatingList extends Component {\n  render() {\n    const { ratingList } = this.props;\n    if (ratingList.length !== 0) {\n      return (\n        <div>\n          {ratingList.map(({ rate, comment, email, ratingId }) => (\n            <div key={ratingId} className=\"jumbotron jumbotron-fluid bg-transparent\">\n              <h1 className=\"display-4\">{comment}</h1>\n              <Rater total={5} rating={rate} interactive={false} />\n              <p className=\"lead\">{email}</p>\n            </div>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default RatingList;\n","import React from 'react';\nimport Rater from 'react-rater';\nimport 'react-rater/lib/react-rater.css';\nimport RatingList from './RatingList';\n\nclass Rating extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { productId } = props;\n    if (!localStorage.getItem(productId)) {\n      localStorage.setItem(productId, '[]');\n    }\n\n    const ratingList = JSON.parse(localStorage.getItem(productId));\n\n    let id = 0;\n    if (ratingList[ratingList.length - 1]) {\n      id = ratingList[ratingList.length - 1].id;\n    }\n\n    this.state = {\n      ratingList,\n      rate: 0,\n      email: '',\n      comment: '',\n      id,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRating = this.handleRating.bind(this);\n    this.addRating = this.addRating.bind(this);\n    this.commentTextArea = this.commentTextArea.bind(this);\n  }\n\n  handleChange(event) {\n    const { id, value } = event;\n    this.setState({ [id]: value });\n  }\n\n  handleRating(rate) {\n    this.setState({ rate });\n  }\n\n  addRating() {\n    const { rate, ratingList, comment, email, id } = this.state;\n    const { productId } = this.props;\n    const ratingId = id + 1;\n    this.setState({\n      ratingList:\n      [...ratingList, { rate, comment, email, ratingId }],\n      id: ratingId,\n    });\n    localStorage.setItem(\n      productId,\n      JSON.stringify([...ratingList, { rate, comment, email, ratingId }]),\n    );\n  }\n\n  commentTextArea() {\n    return (\n      <div>\n        <textarea\n          className=\"form-control\"\n          data-testid=\"product-detail-evaluation\"\n          name=\"comment\"\n          id=\"comment\"\n          cols=\"60\"\n          rows=\"5\"\n          placeholder=\"Mensagem(opcional)\"\n          onChange={(event) => this.handleChange(event.target)}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { ratingList, rate } = this.state;\n\n    return (\n      <div>\n        <fieldset>\n          <div className=\"row-cols-2\">\n            <div className=\"col-6\">\n              <h5>Avaliações</h5>\n              <input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                placeholder=\"email\"\n                onChange={(event) => this.handleChange(event.target)}\n              />\n              <Rater total={5} rating={rate} onRate={({ rating }) => this.handleRating(rating)} />\n              {this.commentTextArea()}\n              <button type=\"submit\" onClick={this.addRating} className=\"btn btn-link\">\n                Avaliar\n              </button>\n            </div>\n          </div>\n        </fieldset>\n        <RatingList ratingList={ratingList} />\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { updateCart } from '../services/crudCart';\n\nexport class CrudCartItem extends Component {\n  constructor(props) {\n    super(props);\n\n    const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n    const { product: { id } } = props;\n    const itemIndex = cartItems.findIndex((item) => item.id === id);\n    let quantity = 1;\n    if (itemIndex !== -1) {\n      quantity = cartItems[itemIndex].quantity;\n    }\n\n    this.state = ({ quantity });\n\n    this.addProductToCart = this.addProductToCart.bind(this);\n    this.subProductToCart = this.subProductToCart.bind(this);\n  }\n\n  addProductToCart() {\n    const { quantity } = this.state;\n    const { product: { availableQuantity } } = this.props;\n    if (quantity < availableQuantity) this.setState({ quantity: quantity + 1 });\n  }\n\n  subProductToCart() {\n    const { quantity } = this.state;\n    if (quantity > 1) this.setState({ quantity: quantity - 1 });\n  }\n\n  render() {\n    const { quantity } = this.state;\n    const { product: { id, price, title, availableQuantity }, updateCartSize } = this.props;\n    return (\n      <div>\n        <h5>Quantidade</h5>\n        <button type=\"button\" onClick={this.addProductToCart} className=\"btn btn-link\">\n          <FontAwesomeIcon icon={faPlus} />\n        </button>\n        <span>{quantity}</span>\n        <button type=\"button\" onClick={this.subProductToCart} className=\"btn btn-link\">\n          <FontAwesomeIcon icon={faMinus} />\n        </button>\n        <input\n          data-testid=\"product-detail-add-to-cart\"\n          type=\"button\"\n          value=\"Adicionar ao Carrinho\"\n          className=\"btn btn-link\"\n          onClick={() => {\n            updateCart(title, price, id, quantity, availableQuantity);\n            updateCartSize();\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CrudCartItem;\n","import React, { Component } from 'react';\nimport Rating from '../components/Rating';\nimport CrudCartItem from '../components/CrudCartItem';\n\nexport class ProductDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.productCard = this.productCard.bind(this);\n  }\n\n  productCard() {\n    const { location: { state: { price, thumbnail, title, shipping } } } = this.props;\n    return (\n      <div className=\"card mb-3\" style={{ maxWidth: '540px' }}>\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            <img src={thumbnail} className=\"card-img\" alt=\"...\" />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\" data-testid=\"product-detail-name\">\n                {`${title} - R$${price}`}\n              </h5>\n              {shipping.shipping ? (\n                <p className=\"bg-danger text-white\" data-testid=\"free-shipping\">\n                  Frete grátis\n                </p>\n              ) : null}\n              <p className=\"card-text\">\n                This is a wider card with supporting text below as a natural lead-in to additional\n                content. This content is a little bit longer.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const { location: { state: { price, title, availableQuantity } } } = this.props;\n    const { match: { params: { id } }, updateCartSize } = this.props;\n    return (\n      <div>\n        <div className=\"container\">\n          {this.productCard()}\n          <CrudCartItem\n            product={{ id, price, title, availableQuantity }}\n            updateCartSize={updateCartSize}\n          />\n          <Rating productId={id} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetail;\n","const brazilStates = [\n  { name: 'Acre', initials: 'AC' },\n  { name: 'Alagoas', initials: 'AL' },\n  { name: 'Amapá', initials: 'AP' },\n  { name: 'Amazonas', initials: 'AM' },\n  { name: 'Bahia', initials: 'BA' },\n  { name: 'Ceará', initials: 'CE' },\n  { name: 'Distrito Federal', initials: 'DF' },\n  { name: 'Espírito Santo', initials: 'ES' },\n  { name: 'Goiás', initials: 'GO' },\n  { name: 'Maranhão', initials: 'MA' },\n  { name: 'Mato Grosso', initials: 'MT' },\n  { name: 'Mato Grosso do Sul', initials: 'MS' },\n  { name: 'Minas Gerais', initials: 'MG' },\n  { name: 'Pará', initials: 'PA' },\n  { name: 'Paraíba', initials: 'PB' },\n  { name: 'Paraná', initials: 'PR' },\n  { name: 'Pernambuco', initials: 'PE' },\n  { name: 'Piauí', initials: 'PI' },\n  { name: 'Rio de Janeiro', initials: 'RJ' },\n  { name: 'Rio Grande do Norte', initials: 'RN' },\n  { name: 'Rio Grande do Sul', initials: 'RS' },\n  { name: 'Rondônia', initials: 'RO' },\n  { name: 'Roraima', initials: 'RR' },\n  { name: 'Santa Catarina', initials: 'SC' },\n  { name: 'São Paulo', initials: 'SP' },\n  { name: 'Sergipe', initials: 'SE' },\n  { name: 'Tocantins', initials: 'TO' },\n];\n\nconst paymentMethods = [\n  { name: 'Boleto', type: 'barcode' },\n  { name: 'MasterCard', type: 'creditCard' },\n  { name: 'Visa', type: 'creditCard' },\n  { name: 'Elo', type: 'creditCard' },\n];\n\nexport default brazilStates;\nexport { paymentMethods, brazilStates };\n","import React, { Component } from 'react';\nimport brazilStates from '../services/data';\n\nconst inputBrazilStates = () => (\n  <div className=\"form-group\">\n    <select className=\"form-control\" id=\"inputBrazilStates\" placeholder=\"Estado\">\n      {brazilStates.map(({ initials }) => (\n        <option key={initials} value={initials}>\n          {initials}\n        </option>\n      ))}\n    </select>\n  </div>\n);\n\nconst inputCity = () => (\n  <div className=\"form-group\">\n    <input type=\"text\" className=\"form-control\" id=\"inputCity\" placeholder=\"Cidade\" required />\n  </div>\n);\n\nconst inputAddressNumber = () => (\n  <div className=\"form-group\">\n    <input\n      type=\"number\"\n      className=\"form-control\"\n      id=\"inputAddressNumber\"\n      placeholder=\"Número\"\n      required\n    />\n  </div>\n);\n\nconst inputComplement = () => (\n  <div className=\"form-group\">\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      id=\"inputComplement\"\n      placeholder=\"Complemento\"\n      required\n    />\n  </div>\n);\n\nconst inputAddress = () => (\n  <div className=\"form-group\">\n    <input\n      data-testid=\"checkout-address\"\n      type=\"text\"\n      className=\"form-control\"\n      id=\"inputAddress\"\n      placeholder=\"Endereço\"\n      required\n    />\n  </div>\n);\n\nconst inputCEP = () => (\n  <div className=\"form-group\">\n    <input\n      data-testid=\"checkout-cep\"\n      type=\"text\"\n      className=\"form-control\"\n      id=\"inputCEP\"\n      placeholder=\"CEP\"\n      required\n    />\n  </div>\n);\n\nconst inputPhoneNumber = () => (\n  <div className=\"form-group\">\n    <input\n      data-testid=\"checkout-phone\"\n      type=\"text\"\n      className=\"form-control\"\n      id=\"inputPhoneNumber\"\n      placeholder=\"Telefone\"\n      required\n    />\n  </div>\n);\n\nconst inputEmail = () => (\n  <div className=\"form-group\">\n    <input\n      data-testid=\"checkout-email\"\n      type=\"email\"\n      className=\"form-control\"\n      id=\"inputEmail\"\n      placeholder=\"Email\"\n      required\n    />\n  </div>\n);\n\nconst inputCPF = () => (\n  <div className=\"form-group\">\n    <input\n      data-testid=\"checkout-cpf\"\n      type=\"text\"\n      className=\"form-control\"\n      id=\"inputCPF\"\n      placeholder=\"CPF\"\n      required\n    />\n  </div>\n);\n\nconst inputFullName = () => (\n  <div className=\"form-group\">\n    <input\n      data-testid=\"checkout-fullname\"\n      type=\"text\"\n      className=\"form-control\"\n      id=\"inputFullName\"\n      placeholder=\"Nome Completo\"\n      required\n    />\n  </div>\n);\n\nexport default class BuyerInfo extends Component {\n  render() {\n    return (\n      <form>\n        <h4>Informações do Comprador</h4>\n        <div className=\"row\">\n          {inputFullName()}\n          {inputCPF()}\n          {inputEmail()}\n          {inputPhoneNumber()}\n          {inputCEP()}\n          {inputAddress()}\n          {inputComplement()}\n          {inputAddressNumber()}\n          {inputCity()}\n          {inputBrazilStates()}\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class PaymentMethod extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div className=\"form-check form-check-inline\">\n        <input type=\"radio\" className=\"form-check-input\" id=\"paymentMethod\" name=\"paymentMethod\" />\n        <label className=\"form-check-label\" htmlFor=\"materialInline1\">\n          {children}\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default PaymentMethod;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCreditCard } from '@fortawesome/free-solid-svg-icons';\nimport { paymentMethods } from '../services/data';\nimport PaymentMethod from './PaymentMethod';\n\nexport class PaymentForms extends Component {\n  render() {\n    return (\n      <form>\n        <h4>Método de Pagamento</h4>\n        <div className=\"row\">\n          {paymentMethods.map(({ name }) => (\n            <PaymentMethod key={name}>\n              {name}\n              <FontAwesomeIcon icon={faCreditCard} />\n            </PaymentMethod>\n          ))}\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default PaymentForms;\n","import React, { Component } from 'react';\nimport BuyerInfo from '../components/BuyerInfo';\nimport PaymentForms from '../components/PaymentForms';\nimport CartTable from '../components/CartTable';\n\nexport default class Checkout extends Component {\n  render() {\n    const { updateCartSize } = this.props;\n    return (\n      <div>\n        <CartTable updateCartSize={updateCartSize} />\n        <BuyerInfo />\n        <PaymentForms />\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Comprar\n        </button>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\n\nexport class ShoppingCartButton extends Component {\n  render() {\n    const { cartSize } = this.props;\n    return (\n      <Link to=\"/shoppingCart\" data-testid=\"shopping-cart-button\">\n        <span data-testid=\"shopping-cart-size\" className=\"cart-size\">{cartSize}</span>\n        <FontAwesomeIcon icon={faShoppingCart} className=\"cart-icon\" />\n      </Link>\n    );\n  }\n}\n\nexport default ShoppingCartButton;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport './App.css';\nimport MainPage from './pages/MainPage';\nimport ShoppingCart from './pages/ShoppingCart';\nimport ProductDetail from './pages/ProductDetail';\nimport Checkout from './pages/Checkout';\nimport Navbar from './components/Navbar';\nimport ShoppingCartButton from './components/ShoppingCartButton';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { cartSize: 0 };\n    this.updateCartSize = this.updateCartSize.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateCartSize();\n  }\n\n  updateCartSize() {\n    const cartItems = JSON.parse(localStorage.getItem('cartItems'));\n    const cartSize = cartItems.reduce((total, item) => total + item.quantity, 0);\n    this.setState({ cartSize });\n  }\n\n  render() {\n    const { cartSize } = this.state;\n    return (\n      <Router>\n        <Navbar>\n          <Link to=\"/\" className=\"navbar-brand\">Online Store</Link>\n          <ShoppingCartButton cartSize={cartSize} />\n        </Navbar>\n        <Switch>\n          <Route\n            path=\"/checkout\"\n            render={(props) => <Checkout {...props} updateCartSize={this.updateCartSize} />}\n          />\n          <Route\n            path=\"/shoppingCart\"\n            render={(props) => <ShoppingCart {...props} updateCartSize={this.updateCartSize} />}\n          />\n          <Route\n            path=\"/product/:id\"\n            render={(props) => <ProductDetail {...props} updateCartSize={this.updateCartSize} />}\n          />\n          <Route path=\"/\" render={() => <MainPage updateCartSize={this.updateCartSize} />} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}